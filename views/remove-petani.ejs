<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Remove Petani Belum Tebus - PIMON</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2c5aa0;
            --secondary-color: #6c757d;
            --success-color: #198754;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --light-bg: #f8f9fa;
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --shadow: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-hover: 0 10px 15px rgba(0,0,0,0.1);
        }
        
        body {
            background-color: #f5f7fb;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .card {
            box-shadow: var(--shadow);
            border: none;
            border-radius: 15px;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-hover);
        }
        
        .card-header {
            border-radius: 15px 15px 0 0 !important;
            background: var(--gradient-primary);
        }
        
        .btn-primary {
            background: var(--gradient-primary);
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .btn-success {
            background: var(--gradient-secondary);
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(240, 147, 251, 0.4);
        }
        
        .status-success { color: var(--success-color); }
        .status-warning { color: var(--warning-color); }
        .status-danger { color: var(--danger-color); }
        
        .upload-area {
            border: 2px dashed #dee2e6;
            border-radius: 10px;
            padding: 2rem;
            text-align: center;
            transition: all 0.3s;
            background-color: white;
        }
        
        .upload-area:hover {
            border-color: var(--primary-color);
            background-color: var(--light-bg);
        }
        
        .upload-area.dragover {
            border-color: var(--primary-color);
            background-color: #e9ecef;
            transform: scale(1.02);
        }
        
        .stats-card {
            background: var(--gradient-primary);
            color: white;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
        }
        
        .condition-info {
            background-color: var(--light-bg);
            border-left: 4px solid var(--primary-color);
            padding: 1rem;
            margin: 1rem 0;
            border-radius: 0 5px 5px 0;
        }
        
        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
            position: relative;
        }
        
        .step-indicator::before {
            content: '';
            position: absolute;
            top: 20px;
            left: 0;
            right: 0;
            height: 2px;
            background-color: #e9ecef;
            z-index: 1;
        }
        
        .step {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 2;
            flex: 1;
        }
        
        .step-number {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-bottom: 0.5rem;
            transition: all 0.3s;
        }
        
        .step.active .step-number {
            background: var(--gradient-primary);
            color: white;
        }
        
        .step.completed .step-number {
            background: var(--success-color);
            color: white;
        }
        
        .step-label {
            font-size: 0.9rem;
            font-weight: 500;
            text-align: center;
        }
        
        .download-section {
            background-color: white;
            border-radius: 10px;
            padding: 1.5rem;
            margin-top: 1.5rem;
            box-shadow: var(--shadow);
            text-align: center;
        }
        
        .feature-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }
        
        .floating-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
            animation: slideIn 0.5s ease-out;
        }
        
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        .pulse {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(44, 90, 160, 0.4);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(44, 90, 160, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(44, 90, 160, 0);
            }
        }
        
        .process-section {
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #f8f9fa;
            border-radius: 10px;
        }
        
        .filter-tag {
            background-color: var(--primary-color);
            color: white;
            border-radius: 15px;
            padding: 2px 8px;
            font-size: 0.8rem;
            margin-left: 5px;
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card">
                    <div class="card-header text-white">
                        <h4 class="mb-0"><i class="fas fa-users-slash me-2"></i>Filter Petani Belum Tebus</h4>
                    </div>
                    <div class="card-body">
                        <!-- Alert Messages -->
                        <div id="alertContainer"></div>

                        <!-- Step Indicator (3 tahap) -->
                        <div class="step-indicator">
                            <div class="step active" id="step1">
                                <div class="step-number">1</div>
                                <div class="step-label">Pilih Kondisi</div>
                            </div>
                            <div class="step" id="step2">
                                <div class="step-number">2</div>
                                <div class="step-label">Upload & Proses</div>
                            </div>
                            <div class="step" id="step3">
                                <div class="step-number">3</div>
                                <div class="step-label">Hasil & Download</div>
                            </div>
                        </div>

                        <!-- Informasi Proses -->
                        <div class="condition-info p-3 mb-3" style="background: #f8f9fa; border-left: 4px solid #0d6efd; border-radius: 6px;">
    <h6 class="mb-2 text-primary">
        <i class="fas fa-info-circle me-2"></i>Informasi Penting
    </h6>
    <p class="mb-1 small">
        Sistem ini hanya berlaku untuk Provinsi DIY & Solo Raya:
    </p>
    <div class="p-2 mb-2 small fw-semibold text-dark" style="background: #d4edda; border: 1px solid #c3e6cb; border-radius: 4px;">
        Kulon Progo, Sleman, Kota Yogyakarta, Bantul, Gunung Kidul, Boyolali, 
        Klaten, Karanganyar, Sragen, Wonogiri, Sukoharjo, Kota Surakarta
    </div>
    <p class="mb-0 small fst-italic text-muted">
        Sistem akan menghapus data petani yang memenuhi kondisi <b>"Tidak Tebus"</b> pada tahun yang dipilih. 
        Data akan dipertahankan jika tidak memenuhi kondisi atau tidak ditemukan di database.
    </p>
</div>


                        <!-- Step 1: Pilih Kondisi -->
                        <div class="mb-4" id="step1-content">
                            <h5 class="mb-3">
                                <i class="fas fa-filter me-2"></i>Pilih Kondisi Filter
                                <span id="selectedConditionsBadge" style="display: none;">
                                    <span class="filter-tag" id="conditionsCount">0 kondisi</span>
                                </span>
                            </h5>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-check mb-2">
                                        <input class="form-check-input condition-checkbox" type="checkbox" value="2023" id="condition2023">
                                        <label class="form-check-label fw-bold" for="condition2023">
                                            <i class="fas fa-calendar-check me-2 text-primary"></i>Tidak Tebus 2023
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input condition-checkbox" type="checkbox" value="2024" id="condition2024">
                                        <label class="form-check-label fw-bold" for="condition2024">
                                            <i class="fas fa-calendar-check me-2 text-primary"></i>Tidak Tebus 2024
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="alert alert-warning small">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        <strong>Perhatian:</strong> Petani yang terdaftar di 2025 tidak menjadi parameter data yang dihapus atau cleansing
                                    </div>
                                </div>
                            </div>
                            <small class="form-text text-muted d-block mt-1">
                                <i class="fas fa-lightbulb me-1"></i>Pilih minimal satu kondisi untuk melanjutkan
                            </small>
                            
                            <div class="mt-4 text-end">
                                <button type="button" class="btn btn-primary" id="nextToStep2" onclick="showStep(2)">
                                    <i class="fas fa-arrow-right me-2"></i>Lanjut ke Upload File
                                </button>
                            </div>
                        </div>

                        <!-- Step 2: Upload File dan Proses -->
                        <div class="mb-4" id="step2-content" style="display: none;">
                            <h5 class="mb-3">
                                <i class="fas fa-upload me-2"></i>Upload File Excel
                                <span id="step2ConditionsBadge" class="filter-tag">0 kondisi</span>
                            </h5>
                            
                            <div class="upload-area" id="uploadArea">
                                <i class="fas fa-file-excel fa-3x text-success mb-3"></i>
                                <h5>Seret file Excel ke sini atau klik untuk memilih</h5>
                                <p class="text-muted">Format file harus sesuai template (kolom KTP dan Nama Petani harus ada)</p>
                                <input type="file" id="fileInput" accept=".xlsx,.xls" class="d-none">
                                <button type="button" class="btn btn-outline-primary mt-2 pulse" onclick="document.getElementById('fileInput').click()">
                                    <i class="fas fa-folder-open me-2"></i>Pilih File
                                </button>
                            </div>
                            
                            <div id="fileInfo" class="mt-3" style="display: none;">
                                <div class="alert alert-info d-flex justify-content-between align-items-center">
                                    <span>
                                        <i class="fas fa-file me-2"></i>
                                        <span id="fileName" class="fw-bold"></span>
                                        <small class="d-block text-muted" id="fileSize"></small>
                                    </span>
                                    <button type="button" class="btn-close" onclick="clearFile()"></button>
                                </div>
                            </div>
                            <div class="alert alert-warning d-flex align-items-center p-2 mb-3" role="alert">
    <i class="fas fa-exclamation-triangle me-2"></i>
    <div class="small">
        Ukuran file upload maksimal <b>20 MB</b>. Pastikan juga file sesuai template sebelum diunggah.
    </div>
</div>


                            <div class="mt-3">
                                <a href="/api/remove/template" class="btn btn-outline-success btn-sm">
                                    <i class="fas fa-download me-2"></i>Download Template
                                </a>
                                <small class="text-muted ms-2">Template sudah termasuk kolom "Nama Penyuluh" sebagai kolom pertama</small>
                            </div>
                            
                            <!-- Proses Section -->
                            <div class="process-section" id="processSection" style="display: none;">
                                <h5 class="mb-3"><i class="fas fa-cogs me-2"></i>Proses Filter</h5>
                                
                                <div class="d-grid gap-2">
                                    <button type="button" id="processBtn" class="btn btn-primary btn-lg" onclick="processRemove()">
                                        <i class="fas fa-play me-2"></i>Proses Filter
                                    </button>
                                </div>

                                <!-- Progress Bar -->
                                <div id="progressContainer" class="mt-3" style="display: none;">
                                    <div class="progress" style="height: 20px;">
                                        <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated" 
                                             role="progressbar" style="width: 0%"></div>
                                    </div>
                                    <div id="progressText" class="text-center mt-2 fw-bold"></div>
                                </div>
                            </div>
                            
                            <div class="mt-4 d-flex justify-content-between">
                                <button type="button" class="btn btn-outline-secondary" onclick="showStep(1)">
                                    <i class="fas fa-arrow-left me-2"></i>Kembali ke Pilih Kondisi
                                </button>
                            </div>
                        </div>

                        <!-- Step 3: Hasil & Download -->
                        <div id="step3-content" style="display: none;">
                            <div class="stats-card">
                                <h5><i class="fas fa-check-circle me-2"></i>Proses Filter Selesai!</h5>
                                <div id="resultsStats" class="row mt-3"></div>
                            </div>
                            
                            <!-- Download Section -->
                            <div class="download-section">
                                <i class="fas fa-file-download feature-icon"></i>
                                <h5>File hasil telah siap untuk diunduh</h5>
                                <p class="text-muted">Klik tombol di bawah untuk mengunduh file hasil filter</p>
                                <button type="button" id="downloadBtn" class="btn btn-success btn-lg">
                                    <i class="fas fa-download me-2"></i>Download Hasil
                                </button>
                                <p class="small text-muted mt-2">File temporary akan dihapus dalam 5 menit setelah download</p>
                            </div>
                            
                            <div class="text-center mt-4">
    <button type="button" class="btn btn-outline-secondary me-2" onclick="location.reload()">
        <i class="fas fa-redo me-2"></i>Proses Ulang
    </button>
    <!-- <button type="button" class="btn btn-outline-primary" onclick="showStep(1)">
        <i class="fas fa-cog me-2"></i>Ubah Pengaturan
    </button> -->
</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="text-center py-3 mt-4" style="background-color: #f8f9fa; border-top: 1px solid #dee2e6;">
        <small class="text-muted">© 2025 Part of <a href="https://pi-mon.com" target="_blank" class="text-decoration-none fw-bold">Pi-Mon.com</a></small>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedFile = null;
        let downloadUrl = null;
        let selectedConditions = []; // Menyimpan kondisi yang dipilih

        // Fungsi untuk menampilkan step tertentu
        function showStep(stepNumber) {
            // Validasi sebelum pindah step
            if (stepNumber === 2) {
                const conditions = document.querySelectorAll('.condition-checkbox:checked');
                if (conditions.length === 0) {
                    showAlert('Pilih minimal satu kondisi filter', 'warning');
                    return;
                }
            }
            
            // Sembunyikan semua konten step
            document.getElementById('step1-content').style.display = 'none';
            document.getElementById('step2-content').style.display = 'none';
            document.getElementById('step3-content').style.display = 'none';
            
            // Reset status step
            document.querySelectorAll('.step').forEach(step => {
                step.classList.remove('active', 'completed');
            });
            
            // Tampilkan konten step yang dipilih
            document.getElementById(`step${stepNumber}-content`).style.display = 'block';
            
            // Update status step
            for (let i = 1; i <= 3; i++) {
                const stepElement = document.getElementById(`step${i}`);
                if (i < stepNumber) {
                    stepElement.classList.add('completed');
                } else if (i === stepNumber) {
                    stepElement.classList.add('active');
                }
            }
            
            // Update tampilan kondisi di setiap step
            updateConditionsDisplay();
            
            // Jika kembali ke step 1 dari step 3 (ubah pengaturan), jangan reset form
            if (stepNumber === 1 && !event.target.classList.contains('btn-outline-secondary')) {
                // Hanya reset jika bukan dari tombol "Ubah Pengaturan"
                const isFromStep3 = document.getElementById('step3-content').style.display !== 'none';
                if (!isFromStep3) {
                    // Reset hanya jika bukan dari step 3
                    resetStep1Only();
                }
            }
        }

        // Fungsi untuk update tampilan kondisi yang dipilih
        function updateConditionsDisplay() {
            const selectedCount = selectedConditions.length;
            const conditionsText = `${selectedCount} kondisi`;
            
            // Update badge di step 1
            const badge1 = document.getElementById('selectedConditionsBadge');
            const count1 = document.getElementById('conditionsCount');
            if (selectedCount > 0) {
                badge1.style.display = 'inline';
                count1.textContent = conditionsText;
            } else {
                badge1.style.display = 'none';
            }
            
            // Update badge di step 2
            const badge2 = document.getElementById('step2ConditionsBadge');
            badge2.textContent = conditionsText;
            
            // Tampilkan kondisi yang dipilih di step 2
            const conditionsList = document.getElementById('step2ConditionsList');
            if (conditionsList) {
                conditionsList.innerHTML = selectedConditions.map(cond => 
                    `<span class="badge bg-primary me-1">${cond}</span>`
                ).join('');
            }
        }

        // Fungsi untuk menyimpan kondisi yang dipilih
        function saveSelectedConditions() {
            selectedConditions = Array.from(document.querySelectorAll('.condition-checkbox:checked'))
                                   .map(cb => cb.value);
            
            // Simpan ke localStorage untuk persistensi
            localStorage.setItem('selectedConditions', JSON.stringify(selectedConditions));
        }

        // Fungsi untuk memuat kondisi yang disimpan
        function loadSelectedConditions() {
            const savedConditions = localStorage.getItem('selectedConditions');
            if (savedConditions) {
                selectedConditions = JSON.parse(savedConditions);
                
                // Set checkbox sesuai dengan kondisi yang disimpan
                document.querySelectorAll('.condition-checkbox').forEach(checkbox => {
                    checkbox.checked = selectedConditions.includes(checkbox.value);
                });
            }
            updateConditionsDisplay();
        }

        // Reset hanya bagian step 1 (tanpa menghapus kondisi)
        function resetStep1Only() {
            // Hanya reset file upload, bukan kondisi
            selectedFile = null;
            downloadUrl = null;
            fileInput.value = '';
            
            // Reset UI file upload
            document.getElementById('fileInfo').style.display = 'none';
            document.getElementById('processSection').style.display = 'none';
            document.getElementById('progressContainer').style.display = 'none';
        }

        // Reset form lengkap (untuk proses baru)
        function resetForm() {
            // Reset semua variabel
            selectedFile = null;
            downloadUrl = null;
            selectedConditions = [];
            fileInput.value = '';
            
            // Reset UI
            document.getElementById('fileInfo').style.display = 'none';
            document.getElementById('progressContainer').style.display = 'none';
            document.getElementById('processSection').style.display = 'none';
            
            // Uncheck semua checkbox
            document.querySelectorAll('.condition-checkbox').forEach(checkbox => {
                checkbox.checked = false;
            });
            
            // Hapus dari localStorage
            localStorage.removeItem('selectedConditions');
            
            // Update tampilan
            updateConditionsDisplay();
            
            // Kembali ke step 1
            showStep(1);
            
            showAlert('Form telah direset. Silakan mulai proses baru.', 'info');
        }

        // Drag and drop functionality
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');

        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('dragover');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            if (e.dataTransfer.files.length > 0) {
                handleFileSelect(e.dataTransfer.files[0]);
            }
        });

        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length > 0) {
                handleFileSelect(e.target.files[0]);
            }
        });

        function handleFileSelect(file) {
            if (!file.name.match(/\.(xlsx|xls)$/)) {
                showAlert('Hanya file Excel (.xlsx, .xls) yang diperbolehkan', 'danger');
                return;
            }

            // Validasi ukuran file (max 10MB)
            if (file.size > 10 * 1024 * 1024) {
                showAlert('Ukuran file maksimal 10MB', 'danger');
                return;
            }

            selectedFile = file;
            document.getElementById('fileName').textContent = file.name;
            document.getElementById('fileSize').textContent = `Size: ${(file.size / 1024 / 1024).toFixed(2)} MB`;
            document.getElementById('fileInfo').style.display = 'block';
            
            // Tampilkan section proses
            document.getElementById('processSection').style.display = 'block';
        }

        function clearFile() {
            selectedFile = null;
            fileInput.value = '';
            document.getElementById('fileInfo').style.display = 'none';
            document.getElementById('processSection').style.display = 'none';
        }

        // Event listeners untuk checkbox conditions
        document.querySelectorAll('.condition-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                // Validasi: Hanya izinkan 2023 dan 2024
                if (this.value === '2025') {
                    this.checked = false;
                    showAlert('Kondisi 2025 tidak tersedia. Hanya 2023 dan 2024 yang didukung.', 'warning');
                    return;
                }
                
                // Simpan kondisi yang dipilih
                saveSelectedConditions();
                updateConditionsDisplay();
            });
        });

        function showAlert(message, type) {
            // Hapus alert sebelumnya
            const existingAlert = document.querySelector('.floating-alert');
            if (existingAlert) {
                existingAlert.remove();
            }
            
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show floating-alert`;
            alert.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'warning' ? 'exclamation-triangle' : 'exclamation-circle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alert);
            
            // Auto remove setelah 5 detik
            setTimeout(() => {
                if (alert.parentElement) {
                    alert.remove();
                }
            }, 5000);
        }

        async function processRemove() {
            // Gunakan kondisi yang sudah disimpan
            const conditions = selectedConditions;

            // Validasi kondisi
            if (conditions.length === 0) {
                showAlert('Pilih minimal satu kondisi filter', 'warning');
                return;
            }

            if (conditions.includes('2025')) {
                showAlert('Kondisi 2025 tidak didukung. Hanya 2023 dan 2024 yang tersedia.', 'danger');
                return;
            }

            if (!selectedFile) {
                showAlert('Pilih file Excel terlebih dahulu', 'warning');
                return;
            }

            const progressContainer = document.getElementById('progressContainer');
            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progressText');
            const processBtn = document.getElementById('processBtn');
            
            progressContainer.style.display = 'block';
            processBtn.disabled = true;
            progressBar.style.width = '30%';
            progressText.textContent = 'Mengupload file...';

            const formData = new FormData();
            formData.append('file', selectedFile);
            formData.append('conditions', conditions.join(','));

            try {
                progressBar.style.width = '60%';
                progressText.textContent = 'Memproses data...';

                const response = await fetch('/api/remove', {
                    method: 'POST',
                    body: formData
                });

                console.log('Response status:', response.status);
                
                // Handle non-JSON responses
                const contentType = response.headers.get('content-type');
                if (!contentType || !contentType.includes('application/json')) {
                    const text = await response.text();
                    
                    if (text.includes('<!DOCTYPE html>') || text.includes('<html')) {
                        const errorMatch = text.match(/<title[^>]*>(.*?)<\/title>/) || 
                                         text.match(/<h1[^>]*>(.*?)<\/h1>/) ||
                                         text.match(/<p[^>]*>(.*?)<\/p>/);
                        
                        const errorMessage = errorMatch ? errorMatch[1] : 'Server mengembalikan halaman error';
                        
                        throw new Error(`Server Error: ${errorMessage} (Status: ${response.status})`);
                    }
                    
                    throw new Error(`Server mengembalikan format tidak valid. Status: ${response.status}`);
                }

                const result = await response.json();

                if (!response.ok) {
                    throw new Error(result.error || `HTTP error! status: ${response.status}`);
                }

                progressBar.style.width = '100%';
                progressText.textContent = 'Selesai!';

                if (result.success) {
                    // Simpan URL download untuk digunakan nanti
                    downloadUrl = result.download_url;
                    
                    // Tampilkan hasil
                    showResults(result);
                    
                    // Lanjut ke step 3 (hasil & download)
                    setTimeout(() => {
                        showStep(3);
                    }, 1000);
                } else {
                    throw new Error(result.error || 'Terjadi kesalahan');
                }

            } catch (error) {
                console.error('Process error:', error);
                
                let errorMessage = error.message;
                if (error.message.includes('Server mengembalikan format tidak valid')) {
                    errorMessage = 'Server sedang mengalami masalah. Silakan coba lagi atau hubungi administrator.';
                }
                
                showAlert('Error: ' + errorMessage, 'danger');
                
                // Reset progress
                progressContainer.style.display = 'none';
                processBtn.disabled = false;
                progressBar.style.width = '0%';
            }
        }

        function showResults(result) {
            const resultsStats = document.getElementById('resultsStats');

            // Format stats sesuai dengan response backend
            resultsStats.innerHTML = `
                <div class="col-md-3 text-center">
                    <h3>${result.stats.total_data_file}</h3>
                    <small>Total Data dalam File</small>
                </div>
                <div class="col-md-3 text-center">
                    <h3 class="status-success">${result.stats.data_dipertahankan}</h3>
                    <small>Data Dipertahankan</small>
                </div>
                <div class="col-md-3 text-center">
                    <h3 class="status-danger">${result.stats.data_dihapus}</h3>
                    <small>Data Dihapus</small>
                </div>
                <div class="col-md-3 text-center">
                    <h3 class="status-warning">${result.stats.unique_nik_dihapus}</h3>
                    <small>Unique NIK Dihapus</small>
                </div>
            `;

            // Informasi kondisi yang diterapkan
            const conditionInfo = document.createElement('div');
            conditionInfo.className = 'col-12 mt-3';
            conditionInfo.innerHTML = `
                <div class="alert alert-light">
                    <strong>Kondisi yang diterapkan:</strong> ${result.stats.kondisi_diterapkan.join(', ')}
                </div>
            `;
            resultsStats.appendChild(conditionInfo);
        }

        // Event listener untuk tombol download
        document.getElementById('downloadBtn').addEventListener('click', function() {
            if (downloadUrl) {
                // Buka URL download di tab baru
                window.open(downloadUrl, '_blank');
                
                // Tampilkan konfirmasi
                showAlert('File hasil berhasil diunduh!', 'success');
            } else {
                showAlert('Tidak ada file yang tersedia untuk diunduh', 'warning');
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            // Ctrl + R untuk reset form
            if (e.ctrlKey && e.key === 'r') {
                e.preventDefault();
                resetForm();
            }
            
            // Ctrl + Enter untuk proses
            if (e.ctrlKey && e.key === 'Enter') {
                e.preventDefault();
                const processBtn = document.getElementById('processBtn');
                if (!processBtn.disabled) {
                    processRemove();
                }
            }
        });

        // Health check saat load halaman
        window.addEventListener('load', async () => {
            try {
                const response = await fetch('/api/remove/health');
                if (response.ok) {
                    console.log('✅ Backend API is running');
                }
            } catch (error) {
                console.warn('⚠️ Backend health check failed:', error);
            }
            
            // Load kondisi yang disimpan
            loadSelectedConditions();
            
            // Tampilkan step 1 saat halaman pertama kali dimuat
            showStep(1);
        });
    </script>
</body>
</html>